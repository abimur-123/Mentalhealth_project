select(runs = R,walks = BB,hits = H,team = teamID)
lmer(I(runs ~ scale(hits) + scale(walks) + (scale(hits) | team) + (scale(walks) | team) ), data = Teams_df)
runs_lm <- lmer(I(runs ~ scale(hits) + scale(walks) + (scale(hits) | team) + (scale(walks) | team) ), data = Teams_df)
summary(runs_lm)
library(broom)
augment(runs_lm)
resid_df <- augment(runs_lm)
plot(resid_df$.resid)
Teams_df %>% group_by(team) %>%
lm(runs ~ hits + walks)
apply(Teams_df,function(x) lm(x$runs ~ x$hits + x$walks))
apply(Teams_df,1,function(x) lm(x$runs ~ x$hits + x$walks))
ggplot(runs_lm,aes(.resid,.fitted)) +
geom_point()
library(nlme)
library(Lahman)
library(dplyr)
library(lme4)
library(broom)
library(ggplot2)
head(Teams)
ggplot(runs_lm,aes(.resid,.fitted)) +
geom_point()
resid_df <- augment(runs_lm)
ggplot(runs_lm,aes(y = .resid,x = .fitted)) +
geom_point()
apply(Teams_df,1,function(x) lm(x["runs"] ~ x$["hits"]))
apply(Teams_df,1,function(x) print(x))
apply(Teams_df,1,function(x) print(x[1]))
apply(Teams_df,1,function(x) print(x[runs]))
apply(Teams_df,1,function(x) print(x["runs"]))
lm(x["runs"] ~ x["walks"])
apply(Teams_df,1,function(x){
lm(x[1] ~ x[2])
}
)
apply(Teams_df,1,function(x){
lm(numeric(x[1]) ~ numeric(x[2])
}
apply(Teams_df,1,function(x){
lm(numeric(x[1]) ~ numeric(x[2]))
}
)
apply(Teams_df,1,function(x){
print(c(x[1], x[2]))
}
)
lapply(Teams_df,1,function(x){
print(c(x[1], x[2]))
}
)
lapply(Teams_df,function(x){
print(c(x[1], x[2]))
}
)
lapply(Teams_df,function(x){
lm(x[1] ~ x[2])
}
)
lapply(Teams_df,function(x){
print(x)
}
)
type(x[1])
lapply(Teams_df,function(x){
type(x[1])
}
)
apply(Teams_df,1,function(x){
type(x[1])
}
)
apply(Teams_df,1,function(x){
typeof(x[1])
}
)
str(Teams_df)
Teams_df %>%
purrr::map(
function(x) coef(lm(runs ~ walks))
)
str(Teams_df)
Teams_df %>%
purrr::map(
function(x) coef(lm(runs ~ walks, data = .))
)
Teams_df %>%
purrr::map(
function(x) coef(lm(Team_df$runs ~ walks))
)
Teams_df %>%
purrr::map(
function(x) coef(lm(Teams_df$runs ~ walks))
)
Teams_df %>%
purrr::map(
function(x) print(x)
)
Teams_df %>%
purrr::map(
function(x,y) print(c(x,y))
)
Teams_df %>%
purrr::map(
function(x) print(x[1])
)
Teams_df %>%
purrr::map(
function(x) print(x[2])
)
Teams_df %>%
purrr::map(
function(x) print(x[2]$runs)
)
Teams_df %>%
purrr::map(
function(x) print(x[2]["runs"])
)
fm1 <- lmList(runs ~ walks + hits, data = Teams_df)
fm1 <- lmList(runs ~ walks | team + hits | teams, data = Teams_df)
fm1 <- lmList(runs ~ walks | team + hits | team, data = Teams_df)
fm1 <- lmList(runs ~ walks | team, data = Teams_df)
fm1 <- lmList(runs ~ (walks + hits)| team, data = Teams_df)
summary(fm1)
ggplot(Teams_df,aes(x = walks, y = runs, colour = hits)) +
geom_point() +
geom_smooth() +
facet_grid(~team)
ggplot(Teams_df,aes(x = walks, y = runs, colour = hits)) +
geom_point() +
geom_smooth(method = "lm") +
facet_grid(~team)
Teams_df
ggplot(Teams_df %>% filter(team %in% ("NYA","MIN","PHI")),aes(x = walks, y = runs, colour = hits)) +
ggplot(Teams_df %>% filter(team %in% c("NYA","MIN","PHI")),aes(x = walks, y = runs, colour = hits)) +
geom_point() +
geom_smooth(method = "lm") +
facet_grid(~team)
install.packages("sjPlot")
##Cleansing....
raw <- read.csv("./data/raw_data_2.csv")
library(shiny)
library(shinydashboard)
library(shinyjs)
library(rlang)
library(tidyverse)
library(stringr)
library(FactoMineR)
library(factoextra)
library(ggplot2)
library(plotly)
getwd()
setwd("./Mentalhealth_exploration")
##Cleansing....
raw <- read.csv("./data/raw_data_2.csv")
rem_prev <- raw[,!grepl("previous", colnames(raw))]
View(raw)
names(raw['Are.you.self.employed'])
names(raw[,'Are.you.self.employed'])
names(rem_prev[,'Are.you.self.employed'])
colnames(rem_prev)
colnames(rem_prev) == "Are.you.self.employed."
colnames("rem_prev")[colnames(rem_prev) == "Are.you.self.employed."]
colnames(rem_prev)[colnames(rem_prev) == "Are.you.self.employed."]
colnames(rem_prev)[colnames(rem_prev) == "Are.you.self.employed."] <- "Self_employed"
colnames(rem_prev)[colnames(rem_prev) == "How.many.employees.does.your.company.or.organization.have."] <- "Org_size"
colnames(rem_prev)[colnames(rem_prev) == "Does.your.employer.provide.mental.health.benefits.as.part.of.healthcare.coverage."] <- "Benefits"
colnames(rem_prev)[colnames(rem_prev) == "Is.your.anonymity.protected.if.you.choose.to.take.advantage.of.mental.health.or.substance.abuse.treatment.resources.provided.by.your.employer."] <- "Anonymity"
colnames(rem_prev)[colnames(rem_prev) == "If.a.mental.health.issue.prompted.you.to.request.a.medical.leave.from.work..asking.for.that.leave.would.be."] <- "Absence"
colnames(rem_prev)[colnames(rem_prev) == "Would.you.feel.comfortable.discussing.a.mental.health.disorder.with.your.coworkers."] <- "Coworkers"
colnames(rem_prev)[colnames(rem_prev) == "Do.you.feel.that.your.employer.takes.mental.health.as.seriously.as.physical.health."] <- "Ment_phy"
colnames(rem_prev)[colnames(rem_prev) == "What.is.your.age."] <- "Age"
colnames(rem_prev)[colnames(rem_prev) == "What.is.your.gender."] <- "Gender"
colnames(rem_prev)[colnames(rem_prev) == "What.US.state.or.territory.do.you.live.in."] <- "US_state"
colnames(rem_prev)[colnames(rem_prev) == "What.country.do.you.work.in."] <- "Country"
colnames(rem_prev)[colnames(rem_prev) == "What.US.state.or.territory.do.you.work.in."] <- "US_state_work"
View(rem_prev)
# convert 0 and 1 to Yes and no for Tech and Self employed columns
mh$C3 <- ifelse(mh$C1 == 1,"Yes","No")
mh_sub <- rem_prev %>% select(c(Self_employed,Org_size,Is_tech,Benefits,Anonymity,Absence,Coworkers,Ment_phy,Age,Gender,US_state,Country,US_state_work))
colnames(rem_prev)[colnames(rem_prev) == "Is.your.employer.primarily.a.tech.company.organization."] <- "Is_tech"
mh_sub <- rem_prev %>% select(c(Self_employed,Org_size,Is_tech,Benefits,Anonymity,Absence,Coworkers,Ment_phy,Age,Gender,US_state,Country,US_state_work))
View(mh_sub)
unique(mh_sub$Self_eno)
View(mh_sub)
unique(mh_sub$Self_eno)
unique(mh_sub$Self_employed)
unique(mh_sub$Is_tech)
mh_sub %>% group_by(Is_tech) %>% summarise(n())
mh_sub[mh_sub["Is_tech"] == NA]
mh_sub["Is_tech"] == NA
mh_sub[is.na(mh_sub$Is_tech)]
mh_sub$Is_tech[is.na(mh_sub$Is_tech)]
str(mh_sub)
mh_sub$Is_tech[is.na(mh_sub$Is_tech)] <- 1
# convert 0 and 1 to Yes and no for Tech and Self employed columns
mh$C3 <- ifelse(mh_sub$Self_employed == 1,"Yes","No")
# convert 0 and 1 to Yes and no for Tech and Self employed columns
mh_sub$Self_employed <- ifelse(mh_sub$Self_employed == 1,"Yes","No")
mh_sub$Is_tech <- ifelse(mh_sub$Is_tech == 1,"Yes","No")
mh_sub$Gender %in% c('male', 'Male ', 'M', 'm', 'man', 'Cis male',
'Male.', 'Male (cis)', 'Man', 'Sex is male',
'cis male', 'Malr', 'Dude', "I'm a man why didn't you make this a drop down question. You should of asked sex? And I would of answered yes please. Seriously how much text can this take? ",
'mail', 'M|', 'male ', 'Cis Male', 'Male (trans, FtM)',
'cisdude', 'cis man', 'MALE')
mh_sub$Gender[mh_sub$Gender %in% c('female', 'I identify as female.', 'female ',
'Female assigned at birth ', 'F', 'Woman', 'fm', 'f',
'Cis female', 'Transitioned, M2F', 'Female or Multi-Gender Femme',
'Female ', 'woman', 'female/woman', 'Cisgender Female',
'mtf', 'fem', 'Female (props for making this a freeform field, though)',
' Female', 'Cis-woman', 'AFAB', 'Transgender woman',
'Cis female ')] <- "Female"
mh_sub$Gender[mh_sub$Gender %in% c('Bigender', 'non-binary,', 'Genderfluid (born female)',
'Other/Transfeminine', 'Androgynous', 'male 9:1 female, roughly',
'nb masculine', 'genderqueer', 'Human', 'Genderfluid',
'Enby', 'genderqueer woman', 'Queer', 'Agender', 'Fluid',
'Genderflux demi-girl', 'female-bodied; no feelings about gender',
'non-binary', 'Male/genderqueer', 'Nonbinary', 'Other', 'none of your business',
'Unicorn', 'human', 'Genderqueer')] <- "NB"
mh_sub$Gender[mh_sub$Gender %in% c('Bigender', 'non-binary,', 'Genderfluid (born female)',
'Other/Transfeminine', 'Androgynous', 'male 9:1 female, roughly',
'nb masculine', 'genderqueer', 'Human', 'Genderfluid',
'Enby', 'genderqueer woman', 'Queer', 'Agender', 'Fluid',
'Genderflux demi-girl', 'female-bodied; no feelings about gender',
'non-binary', 'Male/genderqueer', 'Nonbinary', 'Other', 'none of your business',
'Unicorn', 'human', 'Genderqueer')] <- "Others"
levels(mh_sub$Gender)
levels(mh_sub$Gender) <- c(levels(mh_sub$Gender),"None")
mh_sub$Gender[mh_sub$Gender %in% c('Bigender', 'non-binary,', 'Genderfluid (born female)',
'Other/Transfeminine', 'Androgynous', 'male 9:1 female, roughly',
'nb masculine', 'genderqueer', 'Human', 'Genderfluid',
'Enby', 'genderqueer woman', 'Queer', 'Agender', 'Fluid',
'Genderflux demi-girl', 'female-bodied; no feelings about gender',
'non-binary', 'Male/genderqueer', 'Nonbinary', 'Other', 'none of your business',
'Unicorn', 'human', 'Genderqueer')] <- "Others"
mh_sub$Gender[mh_sub$Gender %in% c('Bigender', 'non-binary,', 'Genderfluid (born female)',
'Other/Transfeminine', 'Androgynous', 'male 9:1 female, roughly',
'nb masculine', 'genderqueer', 'Human', 'Genderfluid',
'Enby', 'genderqueer woman', 'Queer', 'Agender', 'Fluid',
'Genderflux demi-girl', 'female-bodied; no feelings about gender',
'Male/genderqueer', 'Nonbinary', 'Other', 'none of your business',
'Unicorn', 'human', 'Genderqueer')] <- "Others"
levels(mh_sub$Gender[mh_sub$Gender %in% c('Bigender', 'non-binary,', 'Genderfluid (born female)',
'Other/Transfeminine', 'Androgynous', 'male 9:1 female, roughly',
'nb masculine', 'genderqueer', 'Human', 'Genderfluid',
'Enby', 'genderqueer woman', 'Queer', 'Agender', 'Fluid',
'Genderflux demi-girl', 'female-bodied; no feelings about gender',
'Male/genderqueer', 'Nonbinary', 'Other', 'none of your business',
'Unicorn', 'human', 'Genderqueer')]) <- "Others"
levels(mh_sub$Gender[mh_sub$Gender %in% c('Bigender', 'non-binary,', 'Genderfluid (born female)',
'Other/Transfeminine', 'Androgynous', 'male 9:1 female, roughly',
'nb masculine', 'genderqueer', 'Human', 'Genderfluid',
'Enby', 'genderqueer woman', 'Queer', 'Agender', 'Fluid',
'Genderflux demi-girl', 'female-bodied; no feelings about gender',
'Male/genderqueer', 'Nonbinary', 'Other', 'none of your business',
'Unicorn', 'human', 'Genderqueer')])
mh_sub$Gender[mh_sub$Gender %in% c('Bigender', 'non-binary,', 'Genderfluid (born female)',
'Other/Transfeminine', 'Androgynous', 'male 9:1 female, roughly',
'nb masculine', 'genderqueer', 'Human', 'Genderfluid',
'Enby', 'genderqueer woman', 'Queer', 'Agender', 'Fluid',
'Genderflux demi-girl', 'female-bodied; no feelings about gender',
'Male/genderqueer', 'Nonbinary', 'Other', 'none of your business',
'Unicorn', 'human', 'Genderqueer')]
typeof(mh_sub$Gender)
##Cleansing....
raw <- read.csv("./data/raw_data_2.csv",stringsAsFactors = FALSE)
rem_prev <- raw[,!grepl("previous", colnames(raw))]
str(rem_prev)
colnames(rem_prev)[colnames(rem_prev) == "Are.you.self.employed."] <- "Self_employed"
colnames(rem_prev)[colnames(rem_prev) == "How.many.employees.does.your.company.or.organization.have."] <- "Org_size"
colnames(rem_prev)[colnames(rem_prev) == "Is.your.employer.primarily.a.tech.company.organization."] <- "Is_tech"
colnames(rem_prev)[colnames(rem_prev) == "Does.your.employer.provide.mental.health.benefits.as.part.of.healthcare.coverage."] <- "Benefits"
colnames(rem_prev)[colnames(rem_prev) == "Is.your.anonymity.protected.if.you.choose.to.take.advantage.of.mental.health.or.substance.abuse.treatment.resources.provided.by.your.employer."] <- "Anonymity"
colnames(rem_prev)[colnames(rem_prev) == "If.a.mental.health.issue.prompted.you.to.request.a.medical.leave.from.work..asking.for.that.leave.would.be."] <- "Absence"
colnames(rem_prev)[colnames(rem_prev) == "Would.you.feel.comfortable.discussing.a.mental.health.disorder.with.your.coworkers."] <- "Coworkers"
colnames(rem_prev)[colnames(rem_prev) == "Do.you.feel.that.your.employer.takes.mental.health.as.seriously.as.physical.health."] <- "Ment_phy"
colnames(rem_prev)[colnames(rem_prev) == "What.is.your.age."] <- "Age"
colnames(rem_prev)[colnames(rem_prev) == "What.is.your.gender."] <- "Gender"
colnames(rem_prev)[colnames(rem_prev) == "What.US.state.or.territory.do.you.live.in."] <- "US_state"
colnames(rem_prev)[colnames(rem_prev) == "What.country.do.you.work.in."] <- "Country"
colnames(rem_prev)[colnames(rem_prev) == "What.US.state.or.territory.do.you.work.in."] <- "US_state_work"
#Replace NA in Is your company tech with 1
mh_sub$Is_tech[is.na(mh_sub$Is_tech)] <- 1
mh_sub <- rem_prev %>% select(c(Self_employed,Org_size,Is_tech,Benefits,Anonymity,Absence,Coworkers,Ment_phy,Age,Gender,US_state,Country,US_state_work))
# convert 0 and 1 to Yes and no for Tech and Self employed columns
mh_sub$Self_employed <- ifelse(mh_sub$Self_employed == 1,"Yes","No")
mh_sub$Is_tech <- ifelse(mh_sub$Is_tech == 1,"Yes","No")
mh_sub$Gender[mh_sub$Gender %in% c('male', 'Male ', 'M', 'm', 'man', 'Cis male',
'Male.', 'Male (cis)', 'Man', 'Sex is male',
'cis male', 'Malr', 'Dude', "I'm a man why didn't you make this a drop down question. You should of asked sex? And I would of answered yes please. Seriously how much text can this take? ",
'mail', 'M|', 'male ', 'Cis Male', 'Male (trans, FtM)',
'cisdude', 'cis man', 'MALE')] <- "Male"
mh_sub$Gender[mh_sub$Gender %in% c('female', 'I identify as female.', 'female ',
'Female assigned at birth ', 'F', 'Woman', 'fm', 'f',
'Cis female', 'Transitioned, M2F', 'Female or Multi-Gender Femme',
'Female ', 'woman', 'female/woman', 'Cisgender Female',
'mtf', 'fem', 'Female (props for making this a freeform field, though)',
' Female', 'Cis-woman', 'AFAB', 'Transgender woman',
'Cis female ')] <- "Female"
mh_sub$Gender[mh_sub$Gender %in% c('Bigender', 'non-binary,', 'Genderfluid (born female)',
'Other/Transfeminine', 'Androgynous', 'male 9:1 female, roughly',
'nb masculine', 'genderqueer', 'Human', 'Genderfluid',
'Enby', 'genderqueer woman', 'Queer', 'Agender', 'Fluid',
'Genderflux demi-girl', 'female-bodied; no feelings about gender',
'Male/genderqueer', 'Nonbinary', 'Other', 'none of your business',
'Unicorn', 'human', 'Genderqueer')] <- "Others"
# replace the one null with Male, the mode gender, so we don't have to drop the row
mh_sub$Gender[is.na(mh_sub$Gender)]
unique(mh_sub$Gender)
mh_sub$Gender[mh_sub$Gender %in% c('male', 'Male ', 'M', 'm', 'man', 'Cis male',
'Male.', 'Male (cis)', 'Man', 'Sex is male',
'cis male', 'Malr', 'Dude', "I'm a man why didn't you make this a drop down question. You should of asked sex? And I would of answered yes please. Seriously how much text can this take? ",
'mail', 'M|', 'male ', 'Cis Male', 'Male (trans, FtM)',
'cisdude', 'cis man', 'MALE',"N/A","")] <- "Male"
r
mh_sub$Gender[mh_sub$Gender %in% c('female', 'I identify as female.', 'female ',
'Female assigned at birth ', 'F', 'Woman', 'fm', 'f',
'Cis female', 'Transitioned, M2F', 'Female or Multi-Gender Femme',
'Female ', 'woman', 'female/woman', 'Cisgender Female',
'mtf', 'fem', 'Female (props for making this a freeform field, though)',
' Female', 'Cis-woman', 'AFAB', 'Transgender woman',
'Cis female ')] <- "Female"
mh_sub$Gender[mh_sub$Gender %in% c('Bigender', 'non-binary,', 'Genderfluid (born female)',
'Other/Transfeminine', 'Androgynous', 'male 9:1 female, roughly',
'nb masculine', 'genderqueer', 'Human', 'Genderfluid',
'Enby', 'genderqueer woman', 'Queer', 'Agender', 'Fluid',
'Genderflux demi-girl', 'female-bodied; no feelings about gender',
'Male/genderqueer', 'Nonbinary', 'Other', 'none of your business',
'Unicorn', 'human', 'Genderqueer','non-binary')] <- "Others"
?write.csv
write.csv(mh_sub,"Cleansed.csv",row.names = FALSE)
#Replace NA in Is your company tech with 1
mh_sub$Is_tech[is.na(mh_sub$Is_tech)] <- 1
View(mh_sub)
mh_sub$Is_tech[mh_sub$Is_tech == 1] <- "Yes"
write.csv(mh_sub,"Cleansed.csv",row.names = FALSE)
##Cleansing....
raw <- read.csv("./data/raw_data_2.csv",stringsAsFactors = FALSE)
rem_prev <- raw[,!grepl("previous", colnames(raw))]
View(rem_prev)
colnames(rem_prev)[colnames(rem_prev) == "Have.you.been.diagnosed.with.a.mental.health.condition.by.a.medical.professional."] <- "Mental_ill"
unique(rem_prev$Mental_ill)
colnames(rem_prev)[colnames(rem_prev) == "Are.you.self.employed."] <- "Self_employed"
colnames(rem_prev)[colnames(rem_prev) == "How.many.employees.does.your.company.or.organization.have."] <- "Org_size"
colnames(rem_prev)[colnames(rem_prev) == "Is.your.employer.primarily.a.tech.company.organization."] <- "Is_tech"
colnames(rem_prev)[colnames(rem_prev) == "Does.your.employer.provide.mental.health.benefits.as.part.of.healthcare.coverage."] <- "Benefits"
colnames(rem_prev)[colnames(rem_prev) == "Is.your.anonymity.protected.if.you.choose.to.take.advantage.of.mental.health.or.substance.abuse.treatment.resources.provided.by.your.employer."] <- "Anonymity"
colnames(rem_prev)[colnames(rem_prev) == "If.a.mental.health.issue.prompted.you.to.request.a.medical.leave.from.work..asking.for.that.leave.would.be."] <- "Absence"
colnames(rem_prev)[colnames(rem_prev) == "Would.you.feel.comfortable.discussing.a.mental.health.disorder.with.your.coworkers."] <- "Coworkers"
colnames(rem_prev)[colnames(rem_prev) == "Do.you.feel.that.your.employer.takes.mental.health.as.seriously.as.physical.health."] <- "Ment_phy"
colnames(rem_prev)[colnames(rem_prev) == "What.is.your.age."] <- "Age"
colnames(rem_prev)[colnames(rem_prev) == "What.is.your.gender."] <- "Gender"
colnames(rem_prev)[colnames(rem_prev) == "What.US.state.or.territory.do.you.live.in."] <- "US_state"
colnames(rem_prev)[colnames(rem_prev) == "What.country.do.you.work.in."] <- "Country"
colnames(rem_prev)[colnames(rem_prev) == "What.US.state.or.territory.do.you.work.in."] <- "US_state_work"
#Replace NA in Is your company tech with 1
mh_sub$Is_tech[is.na(mh_sub$Is_tech)] <- "Yes"
mh_sub <- rem_prev %>% select(c(Self_employed,
Org_size,
Mental_ill,
Is_tech,
Benefits,
Anonymity,
Absence,
Coworkers,
Ment_phy,
Age,
Gender,
US_state,
Country,
US_state_work))
# convert 0 and 1 to Yes and no for Tech and Self employed columns
mh_sub$Self_employed <- ifelse(mh_sub$Self_employed == 1,"Yes","No")
mh_sub$Is_tech <- ifelse(mh_sub$Is_tech == 1,"Yes","No")
mh_sub$Gender[mh_sub$Gender %in% c('male', 'Male ', 'M', 'm', 'man', 'Cis male',
'Male.', 'Male (cis)', 'Man', 'Sex is male',
'cis male', 'Malr', 'Dude', "I'm a man why didn't you make this a drop down question. You should of asked sex? And I would of answered yes please. Seriously how much text can this take? ",
'mail', 'M|', 'male ', 'Cis Male', 'Male (trans, FtM)',
'cisdude', 'cis man', 'MALE',"N/A","")] <- "Male"
mh_sub$Gender[mh_sub$Gender %in% c('female', 'I identify as female.', 'female ',
'Female assigned at birth ', 'F', 'Woman', 'fm', 'f',
'Cis female', 'Transitioned, M2F', 'Female or Multi-Gender Femme',
'Female ', 'woman', 'female/woman', 'Cisgender Female',
'mtf', 'fem', 'Female (props for making this a freeform field, though)',
' Female', 'Cis-woman', 'AFAB', 'Transgender woman',
'Cis female ')] <- "Female"
mh_sub$Gender[mh_sub$Gender %in% c('Bigender', 'non-binary,', 'Genderfluid (born female)',
'Other/Transfeminine', 'Androgynous', 'male 9:1 female, roughly',
'nb masculine', 'genderqueer', 'Human', 'Genderfluid',
'Enby', 'genderqueer woman', 'Queer', 'Agender', 'Fluid',
'Genderflux demi-girl', 'female-bodied; no feelings about gender',
'Male/genderqueer', 'Nonbinary', 'Other', 'none of your business',
'Unicorn', 'human', 'Genderqueer','non-binary')] <- "Others"
write.csv(mh_sub,"Cleansed.csv",row.names = FALSE)
mh_sub %>% filter(Benefits != '',Country == 'United States of America') %>% select(US_state_work,Benefits,Age) %>%
group_by(US_state_work,Benefits) %>%
summarise(n = n(),age = sum(Age)) %>%
mutate(coverage_ratio = n/sum(n) * 100,responses = sum(n),avg_age = sum(age)/sum(n)) %>%
arrange(US_state_work)
%>% View()
mh_sub %>% filter(Benefits != '',Country == 'United States of America') %>%
select(US_state_work,Benefits,Age) %>%
group_by(US_state_work,Benefits) %>%
summarise(n = n(),age = sum(Age)) %>%
mutate(coverage_ratio = n/sum(n) * 100,responses = sum(n),avg_age = sum(age)/sum(n)) %>%
arrange(US_state_work)
%>% View()
mh_sub %>% filter(Benefits != '',Country == 'United States of America') %>%
select(US_state_work,Benefits,Age) %>%
group_by(US_state_work,Benefits) %>%
summarise(n = n(),age = sum(Age)) %>%
mutate(coverage_ratio = n/sum(n) * 100,responses = sum(n),avg_age = sum(age)/sum(n)) %>%
arrange(US_state_work) %>% View()
rem_prev %>% filter(Country == 'United States of America') %>%
group_by(US_state_work,Mental_ill) %>%
summarise(n = n()) %>%
mutate(ill_ratio = n/sum(n) * 100) %>%
filter(Mental_ill == "Yes")
%>% View()
rem_prev %>% filter(Country == 'United States of America') %>%
group_by(US_state_work,Mental_ill) %>%
summarise(n = n()) %>%
mutate(ill_ratio = n/sum(n) * 100) %>%
filter(Mental_ill == "Yes") %>% View()
#Does.your.employer.provide.mental.health.benefits.as.part.of.healthcare.coverage. C5
cov <- mh_sub %>% filter(Benefits != '',Country == 'United States of America') %>%
select(US_state_work,Benefits,Age) %>%
group_by(US_state_work,Benefits) %>%
summarise(n = n(),age = sum(Age)) %>%
mutate(coverage_ratio = n/sum(n) * 100,responses = sum(n),avg_age = sum(age)/sum(n)) %>%
arrange(US_state_work) #%>% View()
)) %>%
mutate(ill_ratio
#Have.you.been.diagnosed.with.a.mental.health.condition.by.a.medical.professional. C39
m_ill <- rem_prev %>% filter(Country == 'United States of America') %>%
group_by(US_state_work,Mental_ill) %>%
summarise(n = n()) %>%
mutate(ill_ratio = n/sum(n) * 100) %>%
filter(Mental_ill == "Yes") #%>% View()
#Have.you.been.diagnosed.with.a.mental.health.condition.by.a.medical.professional. C39
m_ill <- mh_sub %>% filter(Country == 'United States of America') %>%
group_by(US_state_work,Mental_ill) %>%
summarise(n = n()) %>%
mutate(ill_ratio = n/sum(n) * 100) %>%
filter(Mental_ill == "Yes") #%>% View()
View(m_ill)
map_tracks <- data.frame(left_join(cov,m_ill,by = "C49") %>% select(-c(n.x,n.y,age,C39)) %>%
spread(C5,coverage_ratio),stringsAsFactors = FALSE)
left_join(cov,m_ill,by = "Country") %>% View()
left_join(cov,m_ill,by = "country") %>% View()
View(cov)
View(m_ill)
left_join(cov,m_ill,by = "US_state_work") %>% View()
data.frame(left_join(cov,m_ill,by = "US_state_work") %>%
select(-c(n.x,n.y,age,Mental_ill)) %>%
spread(Benefits,coverage_ratio),stringsAsFactors = FALSE) %>% View()
map_tracks$hover <- with(map_tracks,paste(US_state_work,
"Average age of respondents:",round(avg_age,2),"<br>",
"% of people diagnosed with mental illness:",round(ill_ratio,2),"<br>",
"% of respondents who get mental-care benefits:",round(Yes,2),"<br>",
"% of respondents who aren't aware of the benefits:",round(`I.don.t.know`,2),"<br>",
"% of respondents who do not get benefits:",round(No,2)
))
map_tracks <- data.frame(left_join(cov,m_ill,by = "US_state_work") %>%
select(-c(n.x,n.y,age,Mental_ill)) %>%
spread(Benefits,coverage_ratio),stringsAsFactors = FALSE) #%>% View()
map_tracks$hover <- with(map_tracks,paste(US_state_work,
"Average age of respondents:",round(avg_age,2),"<br>",
"% of people diagnosed with mental illness:",round(ill_ratio,2),"<br>",
"% of respondents who get mental-care benefits:",round(Yes,2),"<br>",
"% of respondents who aren't aware of the benefits:",round(`I.don.t.know`,2),"<br>",
"% of respondents who do not get benefits:",round(No,2)
))
df <- read.csv("https://raw.githubusercontent.com/plotly/datasets/master/2011_us_ag_exports.csv",stringsAsFactors=FALSE)
df <- rbind(df,c("DC","District of Columbia"))
map_codes <- left_join(map_tracks,df %>% select(state,code),by = c("US_state_work" = "state"))
map_codes$code[map_codes$C49 == "California"] <- "CA"
View(map_codes)
map_codes$code[map_codes$US_state_work == "California"] <- "CA"
View(map_codes)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
data.frame(left_join(cov,m_ill,by = "US_state_work") %>%
select(-c(n.x,n.y,age,Mental_ill)) %>%
spread(Benefits,coverage_ratio),stringsAsFactors = FALSE) %>% View()
mh_sub %>% View()
runApp()
ifelse(grepl("No", c("Nope","Yes")),"No",NA)
?ifelse
grepl("No", c("Nope","Yes"))
ifelse("No" %in% c("Nope","Yes"),"No",NA)
runApp()
df
View(df)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
View(df)
View(map_codes)
runApp()
runApp()
View(df)
